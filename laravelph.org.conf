# laraveph.org is current maintained by jose <dot> palala <at> gmail <dot> com
server {
   listen           80;
   server_name      www.laravelph.org;
   return 301       http://laravelph.org$request_uri;:
}

server {
    listen          80;
    server_name     laravelph.org;
 
    root  /server/public/laravelph.org/public;
    access_log /var/log/nginx/laravelph-access.log;
    error_log /var/log/nginx/laravelph-error.log;
   # location /
    #{
        index index.php;
    #}
 
    # Enforce No WWW - I put this in an include:
    # include /etc/nginx/includes/enforce_non_www;
    #if ($host ~* ^www\.(.*))
    #{
    #    set $host_without_www $1;
    #    rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
    #}
 
    # Check if file exists
    if (!-e $request_filename) {
        rewrite ^/(.*)$ /index.php?/$1 last;
        break;
    }
 
    # catch all
 ###a   error_page 404 /index.php;
 
    # The PHP Inclusion Block
    # include /etc/nginx/includes/php;
    #location ~ \..*/.*\.php$
    #{
        # I'm pretty sure this stops people trying to traverse your site to get to other PHP files
    #    return 403;
    #}

    location ~ \.php$
    {
        # secure *.php files
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$; 
 
        fastcgi_pass 127.0.0.1:9000;
        #fastcgi_pass unix:/temp/php-fpm.sock;
	fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }
 
 #old pasted snippet found online
 #   location ~ \.php$ {
 #       # Pass the PHP files to PHP FastCGI for processing
 #       try_files $uri = 404;
 #       fastcgi_split_path_info ^(.+\.php)(/.+)$;
 #       include /etc/nginx/fastcgi_params;
 #       fastcgi_pass 127.0.0.1:9000;
 #       fastcgi_index index.php;
 #   }
 
    # Deny Any Access to .htaccess Files That May Be Present (not usually in issue in Laravel)
    # include /etc/nginx/includes/deny_htaccess;
    location ~ /\.ht {
        deny all;
    }
 
}

